# -*- coding: utf-8 -*-
"""ANÁLISIS DE DATOS - CEPRE - DISTRIBUCIÓN EDAD.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/11VaM4u83lCcnkxYHl1hpe0KtOrTItbYE
"""

# CARGA DE DATASET Y LIBRERÍAS
import pandas as pd
import numpy as np

df = pd.read_csv('/content/sample_data/Datos_abiertos_cepre.csv')
df.head(6)

# AGREGAR COLUMNA 'CICLO' PARA CONSIDERAR EL DATO EN UNA SOLA COLUMNA
df['CICLO'] = df[['ANIO_POSTULA', 'CICLO_POSTULA']].astype(str).agg('-'.join, axis=1)
df['CICLO']

# AGREGAR COLUMNA 'EDAD' RESTANDO EL AÑO DE POSTULACIÓN Y AÑO DE NACIMIENTO
df['EDAD'] = df['ANIO_POSTULA'] - df['ANIO_NACIMIENTO']
df['EDAD']

# REASIGNAMOS EL NOMBRE DE LA COLUMNA 'IDHASH' POR EL DE 'ALUMNOS' Y VALIDAMOS LA INFORMACIÓN DEL DF CON LA ACTUALIZACIÓN HASTA EL MOMENTO
df.rename(columns={'IDHASH': 'ALUMNOS'}, inplace=True)
df.info()

# CONTABILIZAR ALUMNOS MATRICULADOS POR EDAD
gdf = df.groupby('EDAD')[['ALUMNOS']].count()
gdf

# GRAFICAMOS EL DF RESULTADO
ax_gdf=gdf.plot(kind='bar',figsize=(16,6),xlabel='CICLO',ylabel='CANTIDAD',title='CANTIDAD DE ALUMNOS MATRICULADOS EN CEPRE-UNI POR EDAD POR CICLO',grid=True)
for container in ax_gdf.containers:
    ax_gdf.bar_label(container)

# CONTABILIZAR ALUMNOS INGRESANTES POR EDAD POR CICLO
gdf2 = df[(df['INGRESO']=='SI') & (df['MODO_INGRESO']=='DIRECTO')].groupby('EDAD')[['ALUMNOS']].count()
gdf2

# GRAFICAMOS EL DF RESULTADO
ax_gdf2=gdf2.plot(kind='bar',figsize=(16,6),xlabel='CICLO',ylabel='CANTIDAD',title='CANTIDAD DE ALUMNOS INGRESANTES (DIRECTO) DE CEPRE-UNI POR EDAD POR CICLO',grid=True)
for container in ax_gdf2.containers:
    ax_gdf2.bar_label(container)

# DETERMINAR LA EDAD MIN Y MAX DE ALUMNOS INGRESANTES POR CICLO
gdf3 = df[(df['INGRESO'] == 'SI') & (df['MODO_INGRESO'] == 'DIRECTO')].groupby('CICLO').agg(
    EDAD_MINIMA=('EDAD', 'min'),
    EDAD_MAXIMA=('EDAD', 'max')
)
gdf3

# DETERMINAR LA NOTA MIN Y MAX DE ALUMNOS INGRESANTES POR CICLO
gdf4 = df[(df['INGRESO'] == 'SI') & (df['MODO_INGRESO'] == 'DIRECTO')].groupby('CICLO').agg(
    NOTA_MINIMA=('CALIF_FINAL', 'min'),
    NOTA_MAXIMA=('CALIF_FINAL', 'max')
)
gdf4