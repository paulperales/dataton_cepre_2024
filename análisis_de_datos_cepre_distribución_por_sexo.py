# -*- coding: utf-8 -*-
"""ANÁLISIS DE DATOS - CEPRE - DISTRIBUCIÓN POR SEXO.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/17ghI29fo8mO4KccBUn_NK_vXE6PcLjS7
"""

# CARGA DE DATASET Y LIBRERÍAS
import pandas as pd

df = pd.read_csv('/content/sample_data/Datos_abiertos_cepre.csv')
df.head(6)

# AGREGAR COLUMNA 'CICLO' PARA CONSIDERAR EL DATO EN UNA SOLA COLUMNA
df['CICLO'] = df[['ANIO_POSTULA', 'CICLO_POSTULA']].astype(str).agg('-'.join, axis=1)
df['CICLO']

# REASIGNAMOS EL NOMBRE DE LA COLUMNA 'IDHASH' POR EL DE 'ALUMNOS' Y VALIDAMOS LA INFORMACIÓN DEL DF CON LA ACTUALIZACIÓN HASTA EL MOMENTO
df.rename(columns={'IDHASH': 'ALUMNOS'}, inplace=True)
df.info()

# CONTABILIZAR ALUMNOS MATRICULADOS POR CICLO
gdf = df.groupby('CICLO')[['ALUMNOS']].count()
gdf

# GRAFICAMOS EL DF RESULTADO
ax_gdf=gdf.plot(kind='bar',figsize=(16,6),xlabel='CICLO',ylabel='CANTIDAD',title='CANTIDAD DE ALUMNOS MATRICULADOS EN CEPRE-UNI POR CICLO',grid=True)
for container in ax_gdf.containers:
    ax_gdf.bar_label(container)

# CONTABILIZAR ALUMNOS MATRICULADOS POR CICLO
conteo_sexo_matriculado = df.groupby('CICLO')[['SEXO']].value_counts().unstack(fill_value=0)

# CALCULAR PORCENTAJES
porcentajes_sexo_matriculado = (conteo_sexo_matriculado.div(conteo_sexo_matriculado.sum(axis=1), axis=0) * 100).round(2)

# CONCATENER AMBOS DF (CONTEO Y PORCENTAJE)
sm_df = pd.concat([conteo_sexo_matriculado, porcentajes_sexo_matriculado], axis=1, keys=['Conteo Matriculado', 'Porcentaje Matriculado'])

prom_sm = porcentajes_sexo_matriculado.mean()

sm_df

# GRAFICAMOS EL DF RESULTADO CONSIDERANDO EL % DE MATRICULADOS
ax_sm_df=sm_df['Porcentaje Matriculado'].plot(kind='bar',figsize=(16,7),xlabel='CICLO',ylabel='CANTIDAD',title='% DE ALUMNOS MATRICULADOS EN CEPRE-UNI POR CICLO POR GÉNERO',grid=True)
prom_sm_f = str((prom_sm.loc['FEMENINO']).round(2))
prom_sm_m = str((prom_sm.loc['MASCULINO']).round(2))
ax_sm_df.legend(['PROM FEMENINO: ' + prom_sm_f + '%', 'PROM MASCULINO: ' + prom_sm_m + '%'])
for container in ax_sm_df.containers:
    ax_sm_df.bar_label(container)

# CONTABILIZAR ALUMNOS INGRESANTES POR  POR PERIODO ACADÉMICO
conteo_sexo_ingresante = df[(df['INGRESO']=='SI') & (df['MODO_INGRESO']=='DIRECTO')].groupby('CICLO')[['SEXO']].value_counts().unstack(fill_value=0)

# CALCULAR PORCENTAJES EN BASE AL TOTAL DE INGRESANTES
porcentajes_sexo_ingresante = (conteo_sexo_ingresante.div(conteo_sexo_ingresante.sum(axis=1), axis=0) * 100).round(2)

# CONCATENER AMBOS DF (CONTEO Y PORCENTAJE)
si_df = pd.concat([conteo_sexo_ingresante, porcentajes_sexo_ingresante], axis=1, keys=['Conteo Ingresante', 'Porcentaje Ingresante'])

prom_si = porcentajes_sexo_ingresante.mean()

si_df

# GRAFICAMOS EL DF RESULTADO CONSIDERANDO EL % DE INGRESANTES
ax_si_df=si_df['Porcentaje Ingresante'].plot(kind='bar',figsize=(16,7),xlabel='CICLO',ylabel='CANTIDAD',title='% DE ALUMNOS INGRESANTES POR CEPRE-UNI POR CICLO POR GÉNERO',grid=True)
prom_si_f = str((prom_si.loc['FEMENINO']).round(2))
prom_si_m = str((prom_si.loc['MASCULINO']).round(2))
ax_si_df.legend(['PROM FEMENINO: ' + prom_si_f + '%', 'PROM MASCULINO: ' + prom_si_m + '%'])
for container in ax_si_df.containers:
    ax_si_df.bar_label(container)

# EN EL SIGUIENTE ANÁLISIS SE EVALÚA EL % DE INGRESANTES POR GÉNERO EN BASE AL TOTAL DE MATRICULADOS

# CONCATENER AMBOS DF (CONTEO Y PORCENTAJE)
scmi_df = pd.concat([conteo_sexo_matriculado, conteo_sexo_ingresante], axis=1, keys=['Conteo Matriculado', 'Conteo Ingresante'])

scmi_df

# CALCULAR TASAS
tasa_i_f = ((scmi_df['Conteo Ingresante', 'FEMENINO']/scmi_df['Conteo Matriculado', 'FEMENINO']) * 100).round(2)
tasa_i_m = ((scmi_df['Conteo Ingresante', 'MASCULINO']/scmi_df['Conteo Matriculado', 'MASCULINO']) * 100).round(2)

resultado_ti = pd.concat([conteo_sexo_matriculado, conteo_sexo_ingresante, tasa_i_f, tasa_i_m], axis=1, keys=['Conteo Matriculado', 'Conteo Ingresante', 'Tasa Ingresante F', 'Tasa Ingresante M'])

prom_ti = resultado_ti[['Tasa Ingresante F','Tasa Ingresante M']].mean()

resultado_ti

# GRAFICAMOS EL DF RESULTADO CONSIDERANDO LA TASA DE INGRESANTES POR GÉNERO
ax_ti_df=resultado_ti[['Tasa Ingresante F','Tasa Ingresante M']].plot(kind='bar',figsize=(16,7),xlabel='CICLO',ylabel='CANTIDAD',title='% DE ALUMNOS INGRESANTES RESPECTO A ALUMNOS MATRICULADOS POR CICLO DEL MISMO GÉNERO',grid=True)
prom_ti_f = str((prom_ti.loc['Tasa Ingresante F', 0]).round(2))
prom_ti_m = str((prom_ti.loc['Tasa Ingresante M', 1]).round(2))
ax_ti_df.legend(['PROM FEMENINO: ' + prom_ti_f + '%', 'PROM MASCULINO: ' + prom_ti_m + '%'])
for container in ax_ti_df.containers:
    ax_ti_df.bar_label(container)